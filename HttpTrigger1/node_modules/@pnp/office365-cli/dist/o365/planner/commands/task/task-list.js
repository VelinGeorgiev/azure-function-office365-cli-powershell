"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const commands_1 = require("../../commands");
const GraphItemsListCommand_1 = require("../../../base/GraphItemsListCommand");
const vorpal = require('../../../../vorpal-init');
class GraphPlannerTaskListCommand extends GraphItemsListCommand_1.GraphItemsListCommand {
    get name() {
        return `${commands_1.default.PLANNER_TASK_LIST}`;
    }
    get description() {
        return 'Lists Planner tasks for the currently logged in user';
    }
    commandAction(cmd, args, cb) {
        this
            .getAllItems(`${this.resource}/v1.0/me/planner/tasks`, cmd, true)
            .then(() => {
            if (args.options.output === 'json') {
                cmd.log(this.items);
            }
            else {
                cmd.log(this.items.map(t => {
                    const task = {
                        id: t.id,
                        title: t.title,
                        startDateTime: t.startDateTime,
                        dueDateTime: t.dueDateTime,
                        completedDateTime: t.completedDateTime
                    };
                    return task;
                }));
            }
            if (this.verbose) {
                cmd.log(vorpal.chalk.green('DONE'));
            }
            cb();
        }, (err) => this.handleRejectedODataJsonPromise(err, cmd, cb));
    }
    commandHelp(args, log) {
        log(vorpal.find(this.name).helpInformation());
        log(`  Examples:

    List tasks for the currently logged in user
      ${this.name}`);
    }
}
module.exports = new GraphPlannerTaskListCommand();
//# sourceMappingURL=task-list.js.map