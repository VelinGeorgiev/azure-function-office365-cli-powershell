"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const commands_1 = require("../../commands");
const request_1 = require("../../../../request");
const Utils_1 = require("../../../../Utils");
const GraphCommand_1 = require("../../../base/GraphCommand");
const vorpal = require('../../../../vorpal-init');
class AadO365GroupRestoreCommand extends GraphCommand_1.default {
    get name() {
        return commands_1.default.O365GROUP_RESTORE;
    }
    get description() {
        return 'Restores a deleted Office 365 Group';
    }
    getTelemetryProperties(args) {
        const telemetryProps = super.getTelemetryProperties(args);
        telemetryProps.id = (!(!args.options.id)).toString();
        return telemetryProps;
    }
    commandAction(cmd, args, cb) {
        if (this.verbose) {
            cmd.log(`Restoring Office 365 Group: ${args.options.id}...`);
        }
        const requestOptions = {
            url: `${this.resource}/v1.0/directory/deleteditems/${args.options.id}/restore/`,
            headers: {
                'accept': 'application/json;odata.metadata=none'
            },
        };
        request_1.default
            .post(requestOptions)
            .then(() => {
            if (this.verbose) {
                cmd.log(vorpal.chalk.green('DONE'));
            }
            cb();
        }, (rawRes) => this.handleRejectedODataJsonPromise(rawRes, cmd, cb));
    }
    options() {
        const options = [
            {
                option: '-i, --id <id>',
                description: 'The ID of the Office 365 Group to restore'
            }
        ];
        const parentOptions = super.options();
        return options.concat(parentOptions);
    }
    validate() {
        return (args) => {
            if (!args.options.id) {
                return 'Required option id missing';
            }
            if (!Utils_1.default.isValidGuid(args.options.id)) {
                return `${args.options.id} is not a valid GUID`;
            }
            return true;
        };
    }
    commandHelp(args, log) {
        const chalk = vorpal.chalk;
        log(vorpal.find(this.name).helpInformation());
        log(`  Remarks:

    If the specified ${chalk.grey('id')} doesn't refer to a deleted group, you will get
    a ${chalk.grey('File not found')} error.

  Examples:

    Restore group with ID ${chalk.grey('28beab62-7540-4db1-a23f-29a6018a3848')}.
      ${this.name} --id 28beab62-7540-4db1-a23f-29a6018a3848
  `);
    }
}
module.exports = new AadO365GroupRestoreCommand();
//# sourceMappingURL=o365group-restore.js.map