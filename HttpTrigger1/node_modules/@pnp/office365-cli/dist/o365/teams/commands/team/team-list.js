"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const commands_1 = require("../../commands");
const GraphItemsListCommand_1 = require("../../../base/GraphItemsListCommand");
const request_1 = require("../../../../request");
const vorpal = require('../../../../vorpal-init');
class TeamsListCommand extends GraphItemsListCommand_1.GraphItemsListCommand {
    get name() {
        return `${commands_1.default.TEAMS_TEAM_LIST}`;
    }
    get description() {
        return 'Lists Microsoft Teams in the current tenant';
    }
    getTelemetryProperties(args) {
        const telemetryProps = super.getTelemetryProperties(args);
        telemetryProps.joined = args.options.joined;
        return telemetryProps;
    }
    commandAction(cmd, args, cb) {
        let endpoint = `${this.resource}/beta/groups?$filter=resourceProvisioningOptions/Any(x:x eq 'Team')&$select=id,displayName,description`;
        if (args.options.joined) {
            endpoint = `${this.resource}/beta/me/joinedTeams`;
        }
        this
            .getAllItems(endpoint, cmd, true)
            .then(() => {
            if (args.options.joined) {
                return Promise.resolve();
            }
            else {
                return Promise.all(this.items.map(g => this.getTeamFromGroup(g, cmd)));
            }
        })
            .then((res) => {
            if (res) {
                this.items = res;
            }
            cmd.log(this.items);
            if (this.verbose) {
                cmd.log(vorpal.chalk.green('DONE'));
            }
            cb();
        }, (err) => this.handleRejectedODataJsonPromise(err, cmd, cb));
    }
    getTeamFromGroup(group, cmd) {
        return new Promise((resolve, reject) => {
            const requestOptions = {
                url: `${this.resource}/beta/teams/${group.id}`,
                headers: {
                    accept: 'application/json;odata.metadata=none'
                },
                json: true
            };
            request_1.default
                .get(requestOptions)
                .then((res) => {
                resolve({
                    id: group.id,
                    displayName: group.displayName,
                    isArchived: res.isArchived,
                    description: group.description
                });
            }, (err) => {
                // If the user is not member of the team he/she cannot access it
                if (err.statusCode === 403) {
                    resolve({
                        id: group.id,
                        displayName: group.displayName,
                        description: group.description,
                        isArchived: undefined
                    });
                }
                else {
                    reject(err);
                }
            });
        });
    }
    options() {
        const options = [
            {
                option: '-j, --joined',
                description: 'Retrieve only joined teams'
            }
        ];
        const parentOptions = super.options();
        return options.concat(parentOptions);
    }
    commandHelp(args, log) {
        log(vorpal.find(this.name).helpInformation());
        log(`  Remarks:

    You can only see the details or archived status of the Microsoft Teams
    you are a member of.

  Examples:
  
    List all Microsoft Teams in the tenant
      ${this.name}

    List all Microsoft Teams in the tenant you are a member of
      ${this.name} --joined
`);
    }
}
module.exports = new TeamsListCommand();
//# sourceMappingURL=team-list.js.map