"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const config_1 = require("../../../../config");
const commands_1 = require("../../commands");
const Utils_1 = require("../../../../Utils");
const request_1 = require("../../../../request");
const GraphCommand_1 = require("../../../base/GraphCommand");
const vorpal = require('../../../../vorpal-init');
class TeamsSetCommand extends GraphCommand_1.default {
    get name() {
        return `${commands_1.default.TEAMS_TEAM_SET}`;
    }
    get description() {
        return 'Updates settings of a Microsoft Teams team';
    }
    getTelemetryProperties(args) {
        const telemetryProps = super.getTelemetryProperties(args);
        TeamsSetCommand.props.forEach((p) => {
            telemetryProps[p] = typeof args.options[p] !== 'undefined';
        });
        return telemetryProps;
    }
    mapRequestBody(options) {
        const requestBody = {};
        if (options.displayName) {
            requestBody.displayName = options.displayName;
        }
        if (options.description) {
            requestBody.description = options.description;
        }
        if (options.mailNickName) {
            requestBody.mailNickName = options.mailNickName;
        }
        if (options.classification) {
            requestBody.classification = options.classification;
        }
        if (options.visibility) {
            requestBody.visibility = options.visibility;
        }
        return requestBody;
    }
    commandAction(cmd, args, cb) {
        const body = this.mapRequestBody(args.options);
        const requestOptions = {
            url: `${this.resource}/beta/groups/${encodeURIComponent(args.options.teamId)}`,
            headers: {
                accept: 'application/json;odata.metadata=none'
            },
            body: body,
            json: true
        };
        request_1.default
            .patch(requestOptions)
            .then(() => {
            if (this.verbose) {
                cmd.log(vorpal.chalk.green('DONE'));
            }
            cb();
        }, (err) => this.handleRejectedODataJsonPromise(err, cmd, cb));
    }
    options() {
        const options = [
            {
                option: '-i, --teamId <teamId>',
                description: 'The ID of the Microsoft Teams team for which to update settings'
            },
            {
                option: '--displayName [displayName]',
                description: 'The display name for the Microsoft Teams team'
            },
            {
                option: '--description [description]',
                description: 'The description for the Microsoft Teams team'
            },
            {
                option: '--mailNickName [mailNickName]',
                description: 'The mail alias for the Microsoft Teams team'
            },
            {
                option: '--classification [classification]',
                description: 'The classification for the Microsoft Teams team'
            },
            {
                option: '--visibility [visibility]',
                description: 'The visibility of the Microsoft Teams team. Valid values Private|Public',
                autocomplete: ['Private', 'Public']
            }
        ];
        const parentOptions = super.options();
        return options.concat(parentOptions);
    }
    validate() {
        return (args) => {
            if (!args.options.teamId) {
                return 'Required parameter teamId missing';
            }
            if (!Utils_1.default.isValidGuid(args.options.teamId)) {
                return `${args.options.teamId} is not a valid GUID`;
            }
            if (args.options.visibility) {
                if (args.options.visibility.toLowerCase() !== 'private' && args.options.visibility.toLowerCase() !== 'public') {
                    return `${args.options.visibility} is not a valid visibility type. Allowed values are Private|Public`;
                }
            }
            return true;
        };
    }
    commandHelp(args, log) {
        const chalk = vorpal.chalk;
        log(vorpal.find(this.name).helpInformation());
        log(`  Remarks:

    ${chalk.yellow('Attention:')} This command is based on an API that is currently in preview
    and is subject to change once the API reached general availability.

  Examples:
  
    Set Microsoft Teams team visibility as Private
      ${chalk.grey(config_1.default.delimiter)} ${this.name} --teamId '00000000-0000-0000-0000-000000000000' --visibility Private

    Set Microsoft Teams team classification as MBI
      ${chalk.grey(config_1.default.delimiter)} ${this.name} --teamId '00000000-0000-0000-0000-000000000000' --classification MBI
`);
    }
}
TeamsSetCommand.props = [
    'displayName',
    'description',
    'mailNickName',
    'classification',
    'visibility '
];
module.exports = new TeamsSetCommand();
//# sourceMappingURL=team-set.js.map