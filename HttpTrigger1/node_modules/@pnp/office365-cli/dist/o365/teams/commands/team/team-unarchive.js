"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const request_1 = require("../../../../request");
const Utils_1 = require("../../../../Utils");
const commands_1 = require("../../commands");
const GraphCommand_1 = require("../../../base/GraphCommand");
const vorpal = require('../../../../vorpal-init');
class TeamsUnarchiveCommand extends GraphCommand_1.default {
    get name() {
        return `${commands_1.default.TEAMS_TEAM_UNARCHIVE}`;
    }
    get description() {
        return 'Restores an archived Microsoft Teams team';
    }
    commandAction(cmd, args, cb) {
        const endpoint = `${this.resource}/v1.0`;
        const requestOptions = {
            url: `${endpoint}/teams/${encodeURIComponent(args.options.teamId)}/unarchive`,
            headers: {
                'content-type': 'application/json;odata=nometadata',
                'accept': 'application/json;odata.metadata=none'
            },
            json: true
        };
        request_1.default
            .post(requestOptions)
            .then(() => {
            if (this.verbose) {
                cmd.log(vorpal.chalk.green('DONE'));
            }
            cb();
        }, (res) => this.handleRejectedODataJsonPromise(res, cmd, cb));
    }
    options() {
        const options = [
            {
                option: '-i, --teamId <teamId>',
                description: 'The ID of the Microsoft Teams team to restore'
            }
        ];
        const parentOptions = super.options();
        return options.concat(parentOptions);
    }
    validate() {
        return (args) => {
            if (!args.options.teamId) {
                return 'Required parameter teamId missing';
            }
            if (!Utils_1.default.isValidGuid(args.options.teamId)) {
                return `${args.options.teamId} is not a valid GUID`;
            }
            return true;
        };
    }
    commandHelp(args, log) {
        log(vorpal.find(this.name).helpInformation());
        log(`  Remarks:
          
    This command supports admin permissions. Global admins and Microsoft Teams
    service admins can restore teams that they are not a member of.

    This command restores users' ability to send messages and edit the team,
    abiding by tenant and team settings.

  Examples:
    
    Restore an archived Microsoft Teams team
      ${commands_1.default.TEAMS_TEAM_UNARCHIVE} --teamId 6f6fd3f7-9ba5-4488-bbe6-a789004d0d55
    `);
    }
}
module.exports = new TeamsUnarchiveCommand();
//# sourceMappingURL=team-unarchive.js.map