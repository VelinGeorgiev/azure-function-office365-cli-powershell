"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const request_1 = require("../../../../request");
const Utils_1 = require("../../../../Utils");
const commands_1 = require("../../commands");
const GraphCommand_1 = require("../../../base/GraphCommand");
const vorpal = require('../../../../vorpal-init');
class TeamsAppInstallCommand extends GraphCommand_1.default {
    get name() {
        return `${commands_1.default.TEAMS_APP_INSTALL}`;
    }
    get description() {
        return 'Installs an app from the catalog to a Microsoft Teams team';
    }
    commandAction(cmd, args, cb) {
        const endpoint = `${this.resource}/v1.0`;
        const requestOptions = {
            url: `${endpoint}/teams/${args.options.teamId}/installedApps`,
            headers: {
                'content-type': 'application/json;odata=nometadata',
                'accept': 'application/json;odata.metadata=none'
            },
            json: true,
            body: {
                'teamsApp@odata.bind': `${endpoint}/appCatalogs/teamsApps/${args.options.appId}`
            }
        };
        request_1.default
            .post(requestOptions)
            .then(() => {
            if (this.verbose) {
                cmd.log(vorpal.chalk.green('DONE'));
            }
            cb();
        }, (res) => this.handleRejectedODataJsonPromise(res, cmd, cb));
    }
    options() {
        const options = [
            {
                option: '--appId <appId>',
                description: 'The ID of the app to install'
            },
            {
                option: '--teamId <teamId>',
                description: 'The ID of the Microsoft Teams team to which to install the app'
            }
        ];
        const parentOptions = super.options();
        return options.concat(parentOptions);
    }
    validate() {
        return (args) => {
            if (!args.options.appId) {
                return 'Required parameter appId missing';
            }
            if (!Utils_1.default.isValidGuid(args.options.appId)) {
                return `${args.options.appId} is not a valid GUID`;
            }
            if (!args.options.teamId) {
                return 'Required parameter teamId missing';
            }
            if (!Utils_1.default.isValidGuid(args.options.teamId)) {
                return `${args.options.teamId} is not a valid GUID`;
            }
            return true;
        };
    }
    commandHelp(args, log) {
        const chalk = vorpal.chalk;
        log(vorpal.find(this.name).helpInformation());
        log(`  Remarks:

    The ${chalk.grey(`appId`)} has to be the ID of the app from the Microsoft Teams App Catalog.
    Do not use the ID from the manifest of the zip app package.
    Use the ${chalk.blue(`graph teams app list`)} command to get this ID.

  Examples:

    Install an app from the catalog in a Microsoft Teams team
      ${this.name} --appId 4440558e-8c73-4597-abc7-3644a64c4bce --teamId 2609af39-7775-4f94-a3dc-0dd67657e900
`);
    }
}
module.exports = new TeamsAppInstallCommand();
//# sourceMappingURL=app-install.js.map