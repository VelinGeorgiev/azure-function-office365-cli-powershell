"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const commands_1 = require("../../commands");
const GraphCommand_1 = require("../../../base/GraphCommand");
const Utils_1 = require("../../../../Utils");
const request_1 = require("../../../../request");
const vorpal = require('../../../../vorpal-init');
class TeamsChannelGetCommand extends GraphCommand_1.default {
    get name() {
        return `${commands_1.default.TEAMS_CHANNEL_GET}`;
    }
    get description() {
        return 'Gets information about the specific Microsoft Teams team channel';
    }
    commandAction(cmd, args, cb) {
        const requestOptions = {
            url: `${this.resource}/v1.0/teams/${encodeURIComponent(args.options.teamId)}/channels/${encodeURIComponent(args.options.channelId)}`,
            headers: {
                accept: 'application/json;odata.metadata=none'
            },
            json: true
        };
        request_1.default
            .get(requestOptions)
            .then((res) => {
            cmd.log(res);
            if (this.verbose) {
                cmd.log(vorpal.chalk.green('DONE'));
            }
            cb();
        }, (err) => this.handleRejectedODataJsonPromise(err, cmd, cb));
    }
    options() {
        const options = [
            {
                option: '-i, --teamId <teamId>',
                description: 'The ID of the team to which the channel belongs'
            },
            {
                option: '-c, --channelId <channelId>',
                description: 'The ID of the channel for which to retrieve more information'
            }
        ];
        const parentOptions = super.options();
        return options.concat(parentOptions);
    }
    validate() {
        return (args) => {
            if (!args.options.teamId) {
                return 'Required parameter teamId missing';
            }
            if (!Utils_1.default.isValidGuid(args.options.teamId)) {
                return `${args.options.teamId} is not a valid GUID`;
            }
            if (!args.options.channelId) {
                return 'Required parameter channelId missing';
            }
            return true;
        };
    }
    commandHelp(args, log) {
        const chalk = vorpal.chalk;
        log(vorpal.find(this.name).helpInformation());
        log(`  Examples:

    Get information about Microsoft Teams team channel with id
    ${chalk.grey('19:493665404ebd4a18adb8a980a31b4986@thread.skype')}
      ${this.name} --teamId '00000000-0000-0000-0000-000000000000' --channelId '19:493665404ebd4a18adb8a980a31b4986@thread.skype'
    `);
    }
}
module.exports = new TeamsChannelGetCommand();
//# sourceMappingURL=channel-get.js.map