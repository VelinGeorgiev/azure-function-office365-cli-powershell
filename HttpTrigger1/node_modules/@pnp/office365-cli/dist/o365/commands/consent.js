"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const commands_1 = require("./commands");
const Command_1 = require("../../Command");
const config_1 = require("../../config");
const vorpal = require('../../vorpal-init');
class ConsentCommand extends Command_1.default {
    get name() {
        return `${commands_1.default.CONSENT}`;
    }
    get description() {
        return 'Consent additional permissions for the Azure AD application used by the Office 365 CLI';
    }
    getTelemetryProperties(args) {
        const telemetryProps = super.getTelemetryProperties(args);
        telemetryProps.service = args.options.service;
        return telemetryProps;
    }
    commandAction(cmd, args, cb) {
        let scope = '';
        switch (args.options.service) {
            case 'yammer':
                scope = 'https://api.yammer.com/user_impersonation';
                break;
        }
        cmd.log(`To consent permissions for executing ${args.options.service} commands, navigate in your web browser to https://login.microsoftonline.com/${config_1.default.tenant}/oauth2/v2.0/authorize?client_id=${config_1.default.cliAadAppId}&response_type=code&scope=${encodeURIComponent(scope)}`);
        cb();
    }
    action() {
        const cmd = this;
        return function (args, cb) {
            args = cmd.processArgs(args);
            cmd.initAction(args, this);
            cmd.commandAction(this, args, cb);
        };
    }
    options() {
        const options = [
            {
                option: '-s, --service <service>',
                description: 'Service for which to consent permissions. Allowed values: yammer',
                autocomplete: ['yammer']
            }
        ];
        const parentOptions = super.options();
        return options.concat(parentOptions);
    }
    validate() {
        return (args) => {
            if (!args.options.service) {
                return 'Required option service missing';
            }
            if (args.options.service !== 'yammer') {
                return `${args.options.service} is not a valid value for the service option. Allowed values: yammer`;
            }
            return true;
        };
    }
    commandHelp(args, log) {
        const chalk = vorpal.chalk;
        log(vorpal.find(this.name).helpInformation());
        log(`  Remarks:
    
    Using the ${chalk.blue(this.name)} command you can consent additional permissions
    for the Azure AD application used by the Office 365 CLI. This is for example
    necessary to use Yammer commands, which require the Yammer API permission
    that isn't granted to the CLI by default.

    After executing the command, the Office 365 CLI will present you with a URL
    that you need to open in the web browser in order to consent the permissions
    for the selected Office 365 service.

    To simplify things, rather than wondering which permissions you should
    grant for which CLI commands, this command allows you to easily grant all
    the necessary permissions for using commands for the specified Office 365
    service, like Yammer.

  Examples:
  
    Consent permissions to the Yammer API
      ${commands_1.default.CONSENT} --service yammer
`);
    }
}
module.exports = new ConsentCommand();
//# sourceMappingURL=consent.js.map