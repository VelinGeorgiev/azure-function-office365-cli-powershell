"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Auth_1 = require("../../Auth");
const commands_1 = require("./commands");
const Command_1 = require("../../Command");
const Utils_1 = require("../../Utils");
const Auth_2 = require("../../Auth");
const vorpal = require('../../vorpal-init');
class StatusCommand extends Command_1.default {
    get name() {
        return commands_1.default.STATUS;
    }
    get description() {
        return 'Shows Office 365 login status';
    }
    commandAction(cmd, args, cb) {
        if (Auth_1.default.service.connected) {
            if (this.debug) {
                cmd.log({
                    connectedAs: Utils_1.default.getUserNameFromAccessToken(Auth_1.default.service.accessTokens[Auth_1.default.defaultResource].value),
                    authType: Auth_2.AuthType[Auth_1.default.service.authType],
                    accessTokens: JSON.stringify(Auth_1.default.service.accessTokens, null, 2),
                    refreshToken: Auth_1.default.service.refreshToken
                });
            }
            else {
                cmd.log({
                    connectedAs: Utils_1.default.getUserNameFromAccessToken(Auth_1.default.service.accessTokens[Auth_1.default.defaultResource].value)
                });
            }
        }
        else {
            if (this.verbose) {
                cmd.log('Logged out from Office 365');
            }
            else {
                cmd.log('Logged out');
            }
        }
        cb();
    }
    action() {
        const cmd = this;
        return function (args, cb) {
            Auth_1.default
                .restoreAuth()
                .then(() => {
                args = cmd.processArgs(args);
                cmd.initAction(args, this);
                cmd.commandAction(this, args, cb);
            }, (error) => {
                cb(new Command_1.CommandError(error));
            });
        };
    }
    commandHelp(args, log) {
        const chalk = vorpal.chalk;
        log(vorpal.find(commands_1.default.STATUS).helpInformation());
        log(`  Remarks:

    If you are logged in to Office 365, the ${chalk.blue(commands_1.default.STATUS)} command
    will show you information about the user or application name used to sign in
    and the details about the stored refresh and access tokens and their
    expiration date and time when run in debug mode.

  Examples:
  
    Show the information about the current login to Office 365
      ${commands_1.default.STATUS}
`);
    }
}
module.exports = new StatusCommand();
//# sourceMappingURL=status.js.map