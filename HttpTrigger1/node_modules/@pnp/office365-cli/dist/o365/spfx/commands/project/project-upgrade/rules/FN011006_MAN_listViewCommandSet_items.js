"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ManifestRule_1 = require("./ManifestRule");
class FN011006_MAN_listViewCommandSet_items extends ManifestRule_1.ManifestRule {
    get id() {
        return 'FN011006';
    }
    get title() {
        return 'List view command set items property';
    }
    get description() {
        return 'In the manifest add the items property';
    }
    ;
    get resolution() {
        return '';
    }
    ;
    get severity() {
        return 'Required';
    }
    ;
    visit(project, findings) {
        if (!project.manifests ||
            project.manifests.length === 0) {
            return;
        }
        const occurrences = [];
        project.manifests.forEach(manifest => {
            const commandSetManifest = manifest;
            if (commandSetManifest.componentType !== 'Extension' ||
                commandSetManifest.extensionType !== 'ListViewCommandSet' ||
                commandSetManifest.items) {
                return;
            }
            const resolution = {
                items: commandSetManifest.commands || {}
            };
            Object.keys(resolution.items).forEach(k => {
                resolution.items[k].title = { default: resolution.items[k].title },
                    resolution.items[k].type = 'command';
            });
            this.addOccurrence(JSON.stringify(resolution, null, 2), manifest.path, project.path, occurrences);
        });
        if (occurrences.length > 0) {
            this.addFindingWithOccurrences(occurrences, findings);
        }
    }
}
exports.FN011006_MAN_listViewCommandSet_items = FN011006_MAN_listViewCommandSet_items;
//# sourceMappingURL=FN011006_MAN_listViewCommandSet_items.js.map