"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const commands_1 = require("../../commands");
const AnonymousCommand_1 = require("../../../base/AnonymousCommand");
const autocomplete_1 = require("../../../../autocomplete");
const vorpal = require('../../../../vorpal-init');
class CliCompletionShSetupCommand extends AnonymousCommand_1.default {
    get name() {
        return commands_1.default.COMPLETION_SH_SETUP;
    }
    get description() {
        return 'Sets up command completion for Zsh, Bash and Fish';
    }
    commandAction(cmd, args, cb) {
        if (this.debug) {
            cmd.log('Generating command completion...');
        }
        autocomplete_1.autocomplete.generateShCompletion(vorpal);
        if (this.debug) {
            cmd.log('Registering command completion with the shell...');
        }
        autocomplete_1.autocomplete.setupShCompletion();
        cmd.log('Command completion successfully registered. Restart your shell to load the completion');
        if (this.verbose) {
            cmd.log(vorpal.chalk.green('DONE'));
        }
        cb();
    }
    commandHelp(args, log) {
        log(vorpal.find(commands_1.default.COMPLETION_SH_SETUP).helpInformation());
        log(`  Examples:
  
    Set up command completion for Zsh, Bash or Fish
      ${this.getCommandName()}

  More information:

    Command completion
      https://pnp.github.io/office365-cli/concepts/completion/
`);
    }
}
module.exports = new CliCompletionShSetupCommand();
//# sourceMappingURL=completion-sh-setup.js.map