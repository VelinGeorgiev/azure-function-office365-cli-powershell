"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const config_1 = require("../../../../config");
const request_1 = require("../../../../request");
const commands_1 = require("../../commands");
const Command_1 = require("../../../../Command");
const SpoCommand_1 = require("../../../base/SpoCommand");
const Utils_1 = require("../../../../Utils");
const vorpal = require('../../../../vorpal-init');
class SpoOrgNewsSiteRemoveCommand extends SpoCommand_1.default {
    get name() {
        return `${commands_1.default.ORGNEWSSITE_REMOVE}`;
    }
    get description() {
        return 'Removes a site from the list of organizational news sites';
    }
    getTelemetryProperties(args) {
        const telemetryProps = super.getTelemetryProperties(args);
        telemetryProps.confirm = (!(!args.options.confirm)).toString();
        return telemetryProps;
    }
    commandAction(cmd, args, cb) {
        const removeOrgNewsSite = () => {
            let spoAdminUrl = '';
            this
                .getSpoAdminUrl(cmd, this.debug)
                .then((_spoAdminUrl) => {
                spoAdminUrl = _spoAdminUrl;
                return this.getRequestDigest(spoAdminUrl);
            })
                .then((res) => {
                const requestOptions = {
                    url: `${spoAdminUrl}/_vti_bin/client.svc/ProcessQuery`,
                    headers: {
                        'X-RequestDigest': res.FormDigestValue
                    },
                    body: `<Request AddExpandoFieldTypeSuffix="true" SchemaVersion="15.0.0.0" LibraryVersion="16.0.0.0" ApplicationName="${config_1.default.applicationName}" xmlns="http://schemas.microsoft.com/sharepoint/clientquery/2009"><Actions><ObjectPath Id="64" ObjectPathId="63" /><Method Name="RemoveOrgNewsSite" Id="65" ObjectPathId="63"><Parameters><Parameter Type="String">${Utils_1.default.escapeXml(args.options.url)}</Parameter></Parameters></Method></Actions><ObjectPaths><Constructor Id="63" TypeId="{268004ae-ef6b-4e9b-8425-127220d84719}" /></ObjectPaths></Request>`
                };
                return request_1.default.post(requestOptions);
            })
                .then((res) => {
                const json = JSON.parse(res);
                const response = json[0];
                if (response.ErrorInfo) {
                    cb(new Command_1.CommandError(response.ErrorInfo.ErrorMessage));
                    return;
                }
                else {
                    if (this.verbose) {
                        cmd.log(vorpal.chalk.green('DONE'));
                    }
                    cb();
                }
            }, (err) => this.handleRejectedPromise(err, cmd, cb));
        };
        if (args.options.confirm) {
            removeOrgNewsSite();
        }
        else {
            cmd.prompt({
                type: 'confirm',
                name: 'continue',
                default: false,
                message: `Are you sure you want to remove ${args.options.url} from the list of organizational news sites?`,
            }, (result) => {
                if (!result.continue) {
                    cb();
                }
                else {
                    removeOrgNewsSite();
                }
            });
        }
    }
    options() {
        const options = [
            {
                option: '-u, --url <url>',
                description: 'Absolute URL of the site to remove'
            },
            {
                option: '--confirm',
                description: 'Don\'t prompt for confirmation'
            }
        ];
        const parentOptions = super.options();
        return options.concat(parentOptions);
    }
    validate() {
        return (args) => {
            if (!args.options.url) {
                return 'Required parameter url missing';
            }
            const isValidSharePointUrl = SpoCommand_1.default.isValidSharePointUrl(args.options.url);
            if (isValidSharePointUrl !== true) {
                return isValidSharePointUrl;
            }
            return true;
        };
    }
    commandHelp(args, log) {
        const chalk = vorpal.chalk;
        log(vorpal.find(commands_1.default.ORGNEWSSITE_REMOVE).helpInformation());
        log(`  ${chalk.yellow('Important:')} to use this command you have to have permissions to access
    the tenant admin site.
        
  Examples:
  
    Remove a site from the list of organizational news sites
      ${chalk.grey(config_1.default.delimiter)} ${commands_1.default.ORGNEWSSITE_REMOVE} --url https://contoso.sharepoint.com/sites/site1

    Remove a site from the list of organizational news sites, without prompting
    for confirmation
      ${chalk.grey(config_1.default.delimiter)} ${commands_1.default.ORGNEWSSITE_REMOVE} --url https://contoso.sharepoint.com/sites/site1 --confirm
  `);
    }
}
module.exports = new SpoOrgNewsSiteRemoveCommand();
//# sourceMappingURL=orgnewssite-remove.js.map