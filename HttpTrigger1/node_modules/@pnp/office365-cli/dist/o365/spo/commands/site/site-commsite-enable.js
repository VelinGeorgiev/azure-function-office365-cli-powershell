"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const config_1 = require("../../../../config");
const request_1 = require("../../../../request");
const commands_1 = require("../../commands");
const Command_1 = require("../../../../Command");
const SpoCommand_1 = require("../../../base/SpoCommand");
const Utils_1 = require("../../../../Utils");
const vorpal = require('../../../../vorpal-init');
class SpoSiteCommSiteEnableCommand extends SpoCommand_1.default {
    get name() {
        return `${commands_1.default.SITE_COMMSITE_ENABLE}`;
    }
    get description() {
        return 'Enables communication site features on the specified site';
    }
    getTelemetryProperties(args) {
        const telemetryProps = super.getTelemetryProperties(args);
        telemetryProps.designPackageId = typeof args.options.designPackageId !== 'undefined';
        return telemetryProps;
    }
    commandAction(cmd, args, cb) {
        const designPackageId = args.options.designPackageId || '{d604dac3-50d3-405e-9ab9-d4713cda74ef}';
        let spoAdminUrl = '';
        this
            .getSpoAdminUrl(cmd, this.debug)
            .then((_spoAdminUrl) => {
            spoAdminUrl = _spoAdminUrl;
            if (this.debug) {
                cmd.log(`Retrieving request digest...`);
            }
            return this.getRequestDigest(spoAdminUrl);
        })
            .then((res) => {
            const requestOptions = {
                url: `${spoAdminUrl}/_vti_bin/client.svc/ProcessQuery`,
                headers: {
                    'X-RequestDigest': res.FormDigestValue
                },
                body: `<Request AddExpandoFieldTypeSuffix="true" SchemaVersion="15.0.0.0" LibraryVersion="16.0.0.0" ApplicationName="${config_1.default.applicationName}" xmlns="http://schemas.microsoft.com/sharepoint/clientquery/2009"><Actions><ObjectPath Id="4" ObjectPathId="3" /><Method Name="EnableCommSite" Id="5" ObjectPathId="3"><Parameters><Parameter Type="String">${Utils_1.default.escapeXml(args.options.url)}</Parameter><Parameter Type="Guid">${Utils_1.default.escapeXml(designPackageId)}</Parameter></Parameters></Method></Actions><ObjectPaths><Constructor Id="3" TypeId="{268004ae-ef6b-4e9b-8425-127220d84719}" /></ObjectPaths></Request>`
            };
            return request_1.default.post(requestOptions);
        })
            .then((res) => {
            const json = JSON.parse(res);
            const response = json[0];
            if (response.ErrorInfo) {
                cb(new Command_1.CommandError(response.ErrorInfo.ErrorMessage));
                return;
            }
            else {
                if (this.verbose) {
                    cmd.log(vorpal.chalk.green('DONE'));
                }
            }
            cb();
        }, (err) => this.handleRejectedPromise(err, cmd, cb));
    }
    options() {
        const options = [
            {
                option: '-u, --url <url>',
                description: 'The URL of the site to enable communication site features on'
            },
            {
                option: '-i, --designPackageId [designPackageId]',
                description: 'The ID of the site design to apply when enabling communication site features'
            }
        ];
        const parentOptions = super.options();
        return options.concat(parentOptions);
    }
    validate() {
        return (args) => {
            if (args.options.designPackageId &&
                !Utils_1.default.isValidGuid(args.options.designPackageId)) {
                return `${args.options.designPackageId} is not a valid GUID`;
            }
            return SpoCommand_1.default.isValidSharePointUrl(args.options.url);
        };
    }
    commandHelp(args, log) {
        const chalk = vorpal.chalk;
        log(vorpal.find(commands_1.default.SITE_COMMSITE_ENABLE).helpInformation());
        log(`  ${chalk.yellow('Important:')} to use this command you have to have permissions to access
    the tenant admin site.
                
  Examples:
  
    Enable communication site features on an existing site
      ${commands_1.default.SITE_COMMSITE_ENABLE} --url https://contoso.sharepoint.com
`);
    }
}
module.exports = new SpoSiteCommSiteEnableCommand();
//# sourceMappingURL=site-commsite-enable.js.map