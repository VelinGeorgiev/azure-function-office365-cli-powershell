"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const config_1 = require("../../../../config");
const commands_1 = require("../../commands");
const request_1 = require("../../../../request");
const SpoCommand_1 = require("../../../base/SpoCommand");
const Utils_1 = require("../../../../Utils");
const vorpal = require('../../../../vorpal-init');
class SpoThemeGetCommand extends SpoCommand_1.default {
    get name() {
        return commands_1.default.THEME_GET;
    }
    get description() {
        return 'Gets custom theme information';
    }
    commandAction(cmd, args, cb) {
        let spoAdminUrl = '';
        this
            .getSpoAdminUrl(cmd, this.debug)
            .then((_spoAdminUrl) => {
            spoAdminUrl = _spoAdminUrl;
            return this.getRequestDigest(spoAdminUrl);
        })
            .then((res) => {
            if (this.verbose) {
                cmd.log(`Getting ${args.options.name} theme from tenant...`);
            }
            const requestOptions = {
                url: `${spoAdminUrl}/_vti_bin/client.svc/ProcessQuery`,
                headers: {
                    'X-RequestDigest': res.FormDigestValue
                },
                body: `<Request AddExpandoFieldTypeSuffix="true" SchemaVersion="15.0.0.0" LibraryVersion="16.0.0.0" ApplicationName="${config_1.default.applicationName}" xmlns="http://schemas.microsoft.com/sharepoint/clientquery/2009"><Actions><ObjectPath Id="12" ObjectPathId="11" /><ObjectPath Id="14" ObjectPathId="13" /><Query Id="15" ObjectPathId="13"><Query SelectAllProperties="true"><Properties /></Query></Query></Actions><ObjectPaths><Constructor Id="11" TypeId="{268004ae-ef6b-4e9b-8425-127220d84719}" /><Method Id="13" ParentId="11" Name="GetTenantTheme"><Parameters><Parameter Type="String">${Utils_1.default.escapeXml(args.options.name)}</Parameter></Parameters></Method></ObjectPaths></Request>`
            };
            return request_1.default.post(requestOptions);
        })
            .then((res) => {
            const json = JSON.parse(res);
            const contents = json.find(x => { return x['ErrorInfo']; });
            if (contents && contents.ErrorInfo) {
                return Promise.reject(contents.ErrorInfo.ErrorMessage || 'ClientSvc unknown error');
            }
            return Promise.resolve(json);
        })
            .then((json) => {
            const theme = json[6];
            delete theme._ObjectType_;
            cmd.log(theme);
            if (this.verbose) {
                cmd.log(vorpal.chalk.green('DONE'));
            }
            cb();
        }, (err) => this.handleRejectedPromise(err, cmd, cb));
    }
    options() {
        const options = [{
                option: '-n, --name <name>',
                description: 'The name of the theme to retrieve'
            }];
        const parentOptions = super.options();
        return options.concat(parentOptions);
    }
    validate() {
        return (args) => {
            if (!args.options.name) {
                return 'Required parameter name missing';
            }
            return true;
        };
    }
    commandHelp(args, log) {
        const chalk = vorpal.chalk;
        log(vorpal.find(this.name).helpInformation());
        log(`  ${chalk.yellow('Important:')} to use this command you have to have permissions to access
    the tenant admin site.
    
  Examples:
  
    Get information about a theme
      ${commands_1.default.THEME_GET} --name Contoso-Blue

  More information:

    SharePoint site theming
      https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-theming/sharepoint-site-theming-overview
    `);
    }
}
module.exports = new SpoThemeGetCommand();
//# sourceMappingURL=theme-get.js.map