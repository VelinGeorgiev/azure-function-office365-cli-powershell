"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const request_1 = require("../../../../request");
const config_1 = require("../../../../config");
const commands_1 = require("../../commands");
const Command_1 = require("../../../../Command");
const SpoCommand_1 = require("../../../base/SpoCommand");
const vorpal = require('../../../../vorpal-init');
class SpoTenantRecycleBinItemListCommand extends SpoCommand_1.default {
    get name() {
        return commands_1.default.TENANT_RECYCLEBINITEM_LIST;
    }
    get description() {
        return 'Returns all modern and classic site collections in the tenant scoped recycle bin';
    }
    commandAction(cmd, args, cb) {
        let spoAdminUrl = '';
        this
            .getSpoAdminUrl(cmd, this.debug)
            .then((_spoAdminUrl) => {
            spoAdminUrl = _spoAdminUrl;
            return this.getRequestDigest(spoAdminUrl);
        })
            .then((res) => {
            const requestOptions = {
                url: `${spoAdminUrl}/_vti_bin/client.svc/ProcessQuery`,
                headers: {
                    'X-RequestDigest': res.FormDigestValue
                },
                body: `<Request AddExpandoFieldTypeSuffix="true" SchemaVersion="15.0.0.0" LibraryVersion="16.0.0.0" ApplicationName="${config_1.default.applicationName}" xmlns="http://schemas.microsoft.com/sharepoint/clientquery/2009"><Actions><ObjectPath Id="2" ObjectPathId="1" /><ObjectPath Id="4" ObjectPathId="3" /><Query Id="5" ObjectPathId="3"><Query SelectAllProperties="false"><Properties /></Query><ChildItemQuery SelectAllProperties="true"><Properties><Property Name="Url" ScalarProperty="true" /><Property Name="SiteId" ScalarProperty="true" /><Property Name="DaysRemaining" ScalarProperty="true" /><Property Name="Status" ScalarProperty="true" /></Properties></ChildItemQuery></Query></Actions><ObjectPaths><Constructor Id="1" TypeId="{268004ae-ef6b-4e9b-8425-127220d84719}" /><Method Id="3" ParentId="1" Name="GetDeletedSitePropertiesFromSharePoint"><Parameters><Parameter Type="String">0</Parameter></Parameters></Method></ObjectPaths></Request>`
            };
            return request_1.default.post(requestOptions);
        })
            .then((res) => {
            const json = JSON.parse(res);
            const response = json[0];
            if (response.ErrorInfo) {
                cb(new Command_1.CommandError(response.ErrorInfo.ErrorMessage));
                return;
            }
            const results = json[json.length - 1];
            if (args.options.output === 'json') {
                cmd.log(results._Child_Items_);
            }
            else {
                cmd.log(results._Child_Items_.map((r) => {
                    return {
                        DaysRemaining: Number(r.DaysRemaining),
                        DeletionTime: this.dateParser(r.DeletionTime),
                        Url: r.Url
                    };
                }).sort((a, b) => {
                    const urlA = a.Url.toUpperCase();
                    const urlB = b.Url.toUpperCase();
                    if (urlA < urlB) {
                        return -1;
                    }
                    if (urlA > urlB) {
                        return 1;
                    }
                    return 0;
                }));
            }
            cb();
        }, (err) => this.handleRejectedPromise(err, cmd, cb));
    }
    dateParser(dateString) {
        const d = dateString.replace('/Date(', '').replace(')/', '').split(',').map(Number);
        return new Date(d[0], d[1], d[2], d[3], d[4], d[5], d[6]);
    }
    commandHelp(args, log) {
        const chalk = vorpal.chalk;
        log(vorpal.find(this.name).helpInformation());
        log(`  ${chalk.yellow('Important:')} to use this command you have to have permissions to access
    the tenant admin site.
    
  Examples:
  
    Returns all modern and classic site collections in the tenant scoped recycle bin
      ${commands_1.default.TENANT_RECYCLEBINITEM_LIST}
  `);
    }
}
module.exports = new SpoTenantRecycleBinItemListCommand();
//# sourceMappingURL=tenant-recyclebinitem-list.js.map