"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const config_1 = require("../../../../config");
const request_1 = require("../../../../request");
const commands_1 = require("../../commands");
const Command_1 = require("../../../../Command");
const SpoCommand_1 = require("../../../base/SpoCommand");
const Utils_1 = require("../../../../Utils");
const vorpal = require('../../../../vorpal-init');
class SpoServicePrincipalGrantRevokeCommand extends SpoCommand_1.default {
    get name() {
        return `${commands_1.default.SERVICEPRINCIPAL_GRANT_REVOKE}`;
    }
    get description() {
        return 'Revokes the specified set of permissions granted to the service principal';
    }
    alias() {
        return [commands_1.default.SP_GRANT_REVOKE];
    }
    commandAction(cmd, args, cb) {
        let spoAdminUrl = '';
        this
            .getSpoAdminUrl(cmd, this.debug)
            .then((_spoAdminUrl) => {
            spoAdminUrl = _spoAdminUrl;
            if (this.verbose) {
                cmd.log(`Retrieving request digest...`);
            }
            return this.getRequestDigest(spoAdminUrl);
        })
            .then((res) => {
            const requestOptions = {
                url: `${spoAdminUrl}/_vti_bin/client.svc/ProcessQuery`,
                headers: {
                    'X-RequestDigest': res.FormDigestValue
                },
                body: `<Request AddExpandoFieldTypeSuffix="true" SchemaVersion="15.0.0.0" LibraryVersion="16.0.0.0" ApplicationName="${config_1.default.applicationName}" xmlns="http://schemas.microsoft.com/sharepoint/clientquery/2009"><Actions><ObjectPath Id="10" ObjectPathId="9" /><ObjectPath Id="12" ObjectPathId="11" /><ObjectPath Id="14" ObjectPathId="13" /><Method Name="DeleteObject" Id="15" ObjectPathId="13" /><Query Id="16" ObjectPathId="13"><Query SelectAllProperties="true"><Properties /></Query></Query></Actions><ObjectPaths><Constructor Id="9" TypeId="{104e8f06-1e00-4675-99c6-1b9b504ed8d8}" /><Property Id="11" ParentId="9" Name="PermissionGrants" /><Method Id="13" ParentId="11" Name="GetByObjectId"><Parameters><Parameter Type="String">${Utils_1.default.escapeXml(args.options.grantId)}</Parameter></Parameters></Method></ObjectPaths></Request>`
            };
            return request_1.default.post(requestOptions);
        })
            .then((res) => {
            const json = JSON.parse(res);
            const response = json[0];
            if (response.ErrorInfo) {
                cb(new Command_1.CommandError(response.ErrorInfo.ErrorMessage));
                return;
            }
            else {
                if (this.verbose) {
                    cmd.log(vorpal.chalk.green('DONE'));
                }
            }
            cb();
        }, (err) => this.handleRejectedPromise(err, cmd, cb));
    }
    options() {
        const options = [{
                option: '-i, --grantId <grantId>',
                description: 'ObjectId of the permission grant to revoke'
            }];
        const parentOptions = super.options();
        return options.concat(parentOptions);
    }
    validate() {
        return (args) => {
            if (!args.options.grantId) {
                return 'Required parameter grantId missing';
            }
            return true;
        };
    }
    commandHelp(args, log) {
        const chalk = vorpal.chalk;
        log(vorpal.find(commands_1.default.SERVICEPRINCIPAL_GRANT_REVOKE).helpInformation());
        log(`  ${chalk.yellow('Important:')} to use this command you have to have permissions to access
    the tenant admin site.
        
  Remarks:

    The permission grant you want to revoke is denoted using its ${chalk.grey('ObjectId')}.
    You can retrieve it using the ${chalk.grey(`${commands_1.default.SERVICEPRINCIPAL_GRANT_LIST}`)} command.

  Examples:
  
    Revoke permission grant with ObjectId
    ${chalk.grey('50NAzUm3C0K9B6p8ORLtIsQccg4rMERGvFGRtBsk2fA')}
      ${commands_1.default.SERVICEPRINCIPAL_GRANT_REVOKE} --grantId 50NAzUm3C0K9B6p8ORLtIsQccg4rMERGvFGRtBsk2fA
`);
    }
}
module.exports = new SpoServicePrincipalGrantRevokeCommand();
//# sourceMappingURL=serviceprincipal-grant-revoke.js.map