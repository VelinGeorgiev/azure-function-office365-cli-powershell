"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const request_1 = require("../../../../request");
const commands_1 = require("../../commands");
const SpoCommand_1 = require("../../../base/SpoCommand");
const Utils_1 = require("../../../../Utils");
const vorpal = require('../../../../vorpal-init');
class SpoAppPageSetCommand extends SpoCommand_1.default {
    get name() {
        return `${commands_1.default.APPPAGE_SET}`;
    }
    get description() {
        return 'Updates the single-part app page';
    }
    commandAction(cmd, args, cb) {
        const requestOptions = {
            url: `${args.options.webUrl}/_api/sitepages/Pages/UpdateFullPageApp`,
            headers: {
                'content-type': 'application/json;odata=nometadata',
                accept: 'application/json;odata=nometadata'
            },
            json: true,
            body: {
                serverRelativeUrl: `${Utils_1.default.getServerRelativePath(args.options.webUrl, '')}/SitePages/${args.options.pageName}`,
                webPartDataAsJson: args.options.webPartData
            }
        };
        request_1.default.post(requestOptions).then((res) => {
            if (this.verbose) {
                cmd.log(vorpal.chalk.green('DONE'));
            }
            cb();
        }, (err) => this.handleRejectedODataJsonPromise(err, cmd, cb));
    }
    options() {
        const options = [
            {
                option: '-u, --webUrl <webUrl>',
                description: 'The URL of the site where the page to update is located'
            },
            {
                option: '-n, --pageName <pageName>',
                description: 'The name of the page to be updated, eg. page.aspx'
            },
            {
                option: '-d, --webPartData <webPartData>',
                description: 'JSON string of the web part to update on the page'
            }
        ];
        const parentOptions = super.options();
        return options.concat(parentOptions);
    }
    validate() {
        return (args) => {
            if (!args.options.webUrl) {
                return 'Required parameter webUrl missing';
            }
            if (!args.options.pageName) {
                return 'Required parameter pageName missing';
            }
            if (!args.options.webPartData) {
                return 'Required parameter webPartData missing';
            }
            try {
                JSON.parse(args.options.webPartData);
            }
            catch (e) {
                return `Specified webPartData is not a valid JSON string. Error: ${e}`;
            }
            return true;
        };
    }
    commandHelp(args, log) {
        const chalk = vorpal.chalk;
        log(vorpal.find(this.name).helpInformation());
        log(`    
  Examples:   
     
    Updates the single-part app page located in a site with url
    https://contoso.sharepoint.com. Web part data is stored in the ${chalk.grey('$webPartData')}
    variable
      ${this.name} --webUrl "https://contoso.sharepoint.com" --pageName "Contoso.aspx" --webPartData $webPartData 
`);
    }
}
module.exports = new SpoAppPageSetCommand();
//# sourceMappingURL=apppage-set.js.map