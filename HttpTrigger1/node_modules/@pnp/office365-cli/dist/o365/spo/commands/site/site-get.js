"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const commands_1 = require("../../commands");
const request_1 = require("../../../../request");
const SpoCommand_1 = require("../../../base/SpoCommand");
const vorpal = require('../../../../vorpal-init');
class SpoSiteGetCommand extends SpoCommand_1.default {
    get name() {
        return commands_1.default.SITE_GET;
    }
    get description() {
        return 'Gets information about the specific site collection';
    }
    commandAction(cmd, args, cb) {
        const requestOptions = {
            url: `${args.options.url}/_api/site`,
            headers: {
                accept: 'application/json;odata=nometadata'
            },
            json: true
        };
        request_1.default
            .get(requestOptions)
            .then((res) => {
            cmd.log(res);
            if (this.verbose) {
                cmd.log(vorpal.chalk.green('DONE'));
            }
            cb();
        }, (err) => this.handleRejectedODataJsonPromise(err, cmd, cb));
    }
    options() {
        const options = [{
                option: '-u, --url <url>',
                description: 'URL of the site collection to retrieve information for'
            }];
        const parentOptions = super.options();
        return options.concat(parentOptions);
    }
    validate() {
        return (args) => {
            if (!args.options.url) {
                return 'Required parameter url missing';
            }
            const isValidSharePointUrl = SpoCommand_1.default.isValidSharePointUrl(args.options.url);
            if (isValidSharePointUrl !== true) {
                return isValidSharePointUrl;
            }
            return true;
        };
    }
    commandHelp(args, log) {
        const chalk = vorpal.chalk;
        log(vorpal.find(this.name).helpInformation());
        log(`  Remarks:
  
    This command can retrieve information for both classic and modern sites.
   
  Examples:
  
    Return information about the ${chalk.grey('https://contoso.sharepoint.com/sites/project-x')}
    site collection.
      ${commands_1.default.SITE_GET} --url https://contoso.sharepoint.com/sites/project-x
`);
    }
}
module.exports = new SpoSiteGetCommand();
//# sourceMappingURL=site-get.js.map