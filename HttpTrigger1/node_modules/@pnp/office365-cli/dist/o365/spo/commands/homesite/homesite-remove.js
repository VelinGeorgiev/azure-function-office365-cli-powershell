"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const config_1 = require("../../../../config");
const request_1 = require("../../../../request");
const commands_1 = require("../../commands");
const Command_1 = require("../../../../Command");
const SpoCommand_1 = require("../../../base/SpoCommand");
const vorpal = require('../../../../vorpal-init');
class SpoHomeSiteRemoveCommand extends SpoCommand_1.default {
    get name() {
        return commands_1.default.HOMESITE_REMOVE;
    }
    get description() {
        return 'Removes the current Home Site';
    }
    getTelemetryProperties(args) {
        const telemetryProps = super.getTelemetryProperties(args);
        telemetryProps.confirm = args.options.confirm || false;
        return telemetryProps;
    }
    commandAction(cmd, args, cb) {
        const removeHomeSite = () => {
            let spoAdminUrl = '';
            this.getSpoAdminUrl(cmd, this.debug)
                .then((_spoAdminUrl) => {
                spoAdminUrl = _spoAdminUrl;
                return this.getRequestDigest(spoAdminUrl);
            })
                .then((res) => {
                const requestOptions = {
                    url: `${spoAdminUrl}/_vti_bin/client.svc/ProcessQuery`,
                    headers: {
                        'X-RequestDigest': res.FormDigestValue
                    },
                    body: `<Request AddExpandoFieldTypeSuffix="true" SchemaVersion="15.0.0.0" LibraryVersion="16.0.0.0" ApplicationName="${config_1.default.applicationName}" xmlns="http://schemas.microsoft.com/sharepoint/clientquery/2009"><Actions><ObjectPath Id="28" ObjectPathId="27" /><Method Name="RemoveSPHSite" Id="29" ObjectPathId="27" /></Actions><ObjectPaths><Constructor Id="27" TypeId="{268004ae-ef6b-4e9b-8425-127220d84719}" /></ObjectPaths></Request>`
                };
                return request_1.default.post(requestOptions);
            })
                .then((res) => {
                const json = JSON.parse(res);
                const response = json[0];
                if (response.ErrorInfo) {
                    cb(new Command_1.CommandError(response.ErrorInfo.ErrorMessage));
                    return;
                }
                else {
                    cmd.log(json[json.length - 1]);
                    if (this.verbose) {
                        cmd.log(vorpal.chalk.green('DONE'));
                    }
                }
                cb();
            }, (err) => this.handleRejectedPromise(err, cmd, cb));
        };
        if (args.options.confirm) {
            removeHomeSite();
        }
        else {
            cmd.prompt({
                type: 'confirm',
                name: 'continue',
                default: false,
                message: `Are you sure you want to remove the Home Site?`,
            }, (result) => {
                if (!result.continue) {
                    cb();
                }
                else {
                    removeHomeSite();
                }
            });
        }
    }
    options() {
        const options = [
            {
                option: '--confirm',
                description: 'Do not prompt for confirmation before removing the Home Site'
            }
        ];
        const parentOptions = super.options();
        return options.concat(parentOptions);
    }
    commandHelp(args, log) {
        const chalk = vorpal.chalk;
        log(vorpal.find(commands_1.default.HOMESITE_REMOVE).helpInformation());
        log(`  ${chalk.yellow('Important:')} To use this command you have to have permissions to access
      the tenant admin site.

  Examples:

    Removes the current Home Site without confirmation
      ${chalk.grey(config_1.default.delimiter)} ${commands_1.default.HOMESITE_REMOVE} --confirm

  More information:

    SharePoint home sites, a landing for your organization on the intelligent
    intranet
      https://techcommunity.microsoft.com/t5/Microsoft-SharePoint-Blog/SharePoint-home-sites-a-landing-for-your-organization-on-the/ba-p/621933
`);
    }
}
module.exports = new SpoHomeSiteRemoveCommand();
//# sourceMappingURL=homesite-remove.js.map