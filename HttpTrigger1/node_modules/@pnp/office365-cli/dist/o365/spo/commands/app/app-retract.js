"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const commands_1 = require("../../commands");
const request_1 = require("../../../../request");
const Utils_1 = require("../../../../Utils");
const SpoAppBaseCommand_1 = require("./SpoAppBaseCommand");
const SpoCommand_1 = require("../../../base/SpoCommand");
const vorpal = require('../../../../vorpal-init');
class SpoAppRetractCommand extends SpoAppBaseCommand_1.SpoAppBaseCommand {
    get name() {
        return commands_1.default.APP_RETRACT;
    }
    get description() {
        return 'Retracts the specified app from the specified app catalog';
    }
    getTelemetryProperties(args) {
        const telemetryProps = super.getTelemetryProperties(args);
        telemetryProps.appCatalogUrl = (!(!args.options.appCatalogUrl)).toString();
        telemetryProps.confirm = (!(!args.options.confirm)).toString();
        telemetryProps.scope = args.options.scope || 'tenant';
        return telemetryProps;
    }
    commandAction(cmd, args, cb) {
        const scope = (args.options.scope) ? args.options.scope.toLowerCase() : 'tenant';
        const retractApp = () => {
            this
                .getSpoUrl(cmd, this.debug)
                .then((spoUrl) => {
                return this.getAppCatalogSiteUrl(cmd, spoUrl, args);
            })
                .then((appCatalogSiteUrl) => {
                if (this.verbose) {
                    cmd.log(`Retracting app...`);
                }
                const requestOptions = {
                    url: `${appCatalogSiteUrl}/_api/web/${scope}appcatalog/AvailableApps/GetById('${encodeURIComponent(args.options.id)}')/retract`,
                    headers: {
                        accept: 'application/json;odata=nometadata'
                    }
                };
                return request_1.default.post(requestOptions);
            })
                .then(() => {
                if (this.verbose) {
                    cmd.log(vorpal.chalk.green('DONE'));
                }
                cb();
            }, (rawRes) => this.handleRejectedODataPromise(rawRes, cmd, cb));
        };
        if (args.options.confirm) {
            retractApp();
        }
        else {
            cmd.prompt({
                type: 'confirm',
                name: 'continue',
                default: false,
                message: `Are you sure you want to retract the app ${args.options.id} from the app catalog?`,
            }, (result) => {
                if (!result.continue) {
                    cb();
                }
                else {
                    retractApp();
                }
            });
        }
    }
    options() {
        const options = [
            {
                option: '-i, --id <id>',
                description: 'ID of the app to retract. Needs to be available in the app catalog.'
            },
            {
                option: '-u, --appCatalogUrl [appCatalogUrl]',
                description: 'URL of the tenant or site collection app catalog. It must be specified when the scope is \'sitecollection\''
            },
            {
                option: '-s, --scope [scope]',
                description: 'Scope of the app catalog: tenant|sitecollection. Default tenant',
                autocomplete: ['tenant', 'sitecollection']
            },
            {
                option: '--confirm',
                description: 'Don\'t prompt for confirming retracting the app from the tenant app catalog'
            }
        ];
        const parentOptions = super.options();
        return options.concat(parentOptions);
    }
    validate() {
        return (args) => {
            if (args.options.scope) {
                const testScope = args.options.scope.toLowerCase();
                if (!(testScope === 'tenant' || testScope === 'sitecollection')) {
                    return `Scope must be either 'tenant' or 'sitecollection' if specified`;
                }
                if (testScope === 'sitecollection' && !args.options.appCatalogUrl) {
                    return `You must specify appCatalogUrl when the scope is sitecollection`;
                }
            }
            if (!args.options.id) {
                return 'Required parameter id missing';
            }
            if (!Utils_1.default.isValidGuid(args.options.id)) {
                return `${args.options.id} is not a valid GUID`;
            }
            if (args.options.appCatalogUrl) {
                return SpoCommand_1.default.isValidSharePointUrl(args.options.appCatalogUrl);
            }
            return true;
        };
    }
    commandHelp(args, log) {
        const chalk = vorpal.chalk;
        log(vorpal.find(commands_1.default.APP_RETRACT).helpInformation());
        log(`  Remarks:
  
    When adding an app to the tenant app catalog, it's not necessary to specify
    the tenant app catalog URL. When the URL is not specified, the CLI will
    try to resolve the URL itself. Specifying the app catalog URL is required
    when you want to add the app to a site collection app catalog.

    When specifying site collection app catalog, you can specify the URL either
    with our without the ${chalk.grey('AppCatalog')} part, for example
    ${chalk.grey('https://contoso.sharepoint.com/sites/team-a/AppCatalog')} or
    ${chalk.grey('https://contoso.sharepoint.com/sites/team-a')}. CLI will accept both formats.

    If the app with the specified ID doesn't exist in the app catalog, the command will fail
    with an error.
   
  Examples:
  
    Retract the specified app from the tenant app catalog. Try to resolve the URL
    of the tenant app catalog automatically. Additionally, will prompt for confirmation before
    actually retracting the app.
      ${commands_1.default.APP_RETRACT} --id 058140e3-0e37-44fc-a1d3-79c487d371a3

    Retract the specified app from the tenant app catalog located at
    ${chalk.grey('https://contoso.sharepoint.com/sites/apps')}. Additionally, will prompt for confirmation before
    actually retracting the app.
      ${commands_1.default.APP_RETRACT} --id 058140e3-0e37-44fc-a1d3-79c487d371a3 --appCatalogUrl https://contoso.sharepoint.com/sites/apps

    Retract the specified app from the tenant app catalog. Try to resolve the URL
    of the tenant app catalog automatically. Will not prompt for confirmation before retracting
    the app.
      ${commands_1.default.APP_RETRACT} --id 058140e3-0e37-44fc-a1d3-79c487d371a3 --confirm

    Retract the specified app from a site collection app catalog 
    of site ${chalk.grey('https://contoso.sharepoint.com/sites/site1')}.
      ${commands_1.default.APP_RETRACT} --id d95f8c94-67a1-4615-9af8-361ad33be93c --scope sitecollection --appCatalogUrl https://contoso.sharepoint.com/sites/site1
    
  More information:
  
    Application Lifecycle Management (ALM) APIs
      https://docs.microsoft.com/en-us/sharepoint/dev/apis/alm-api-for-spfx-add-ins
`);
    }
}
module.exports = new SpoAppRetractCommand();
//# sourceMappingURL=app-retract.js.map