"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const request_1 = require("../../../../request");
const commands_1 = require("../../commands");
const SpoCommand_1 = require("../../../base/SpoCommand");
const Utils_1 = require("../../../../Utils");
const vorpal = require('../../../../vorpal-init');
class SpoSiteDesignTaskRemoveCommand extends SpoCommand_1.default {
    get name() {
        return `${commands_1.default.SITEDESIGN_TASK_REMOVE}`;
    }
    get description() {
        return 'Removes the specified site design scheduled for execution';
    }
    getTelemetryProperties(args) {
        const telemetryProps = super.getTelemetryProperties(args);
        telemetryProps.confirm = args.options.confirm || false;
        return telemetryProps;
    }
    commandAction(cmd, args, cb) {
        const removeSiteDesignTask = () => {
            this
                .getSpoUrl(cmd, this.debug)
                .then((spoUrl) => {
                const requestOptions = {
                    url: `${spoUrl}/_api/Microsoft.Sharepoint.Utilities.WebTemplateExtensions.SiteScriptUtility.RemoveSiteDesignTask`,
                    headers: {
                        accept: 'application/json;odata=nometadata'
                    },
                    body: {
                        taskId: args.options.taskId
                    },
                    json: true
                };
                return request_1.default.post(requestOptions);
            })
                .then(() => {
                if (this.verbose) {
                    cmd.log(vorpal.chalk.green('DONE'));
                }
                cb();
            }, (err) => this.handleRejectedODataJsonPromise(err, cmd, cb));
        };
        if (args.options.confirm) {
            removeSiteDesignTask();
        }
        else {
            cmd.prompt({
                type: 'confirm',
                name: 'continue',
                default: false,
                message: `Are you sure you want to remove the site design task ${args.options.taskId}?`,
            }, (result) => {
                if (!result.continue) {
                    cb();
                }
                else {
                    removeSiteDesignTask();
                }
            });
        }
    }
    options() {
        const options = [
            {
                option: '-i, --taskId <taskId>',
                description: 'The ID of the site design task to remove'
            },
            {
                option: '--confirm',
                description: 'Don\'t prompt for confirming removing the site design task'
            }
        ];
        const parentOptions = super.options();
        return options.concat(parentOptions);
    }
    validate() {
        return (args) => {
            if (!args.options.taskId) {
                return 'Required parameter taskId missing';
            }
            if (!Utils_1.default.isValidGuid(args.options.taskId)) {
                return `${args.options.taskId} is not a valid GUID`;
            }
            return true;
        };
    }
    commandHelp(args, log) {
        const chalk = vorpal.chalk;
        log(vorpal.find(this.name).helpInformation());
        log(`  Examples:
    
    Removes the specified site design task with taskId
    ${chalk.grey('6ec3ca5b-d04b-4381-b169-61378556d76e')} scheduled for execution without
    prompting confirmation
      ${this.name} --taskId 6ec3ca5b-d04b-4381-b169-61378556d76e --confirm

    Removes the specified site design task with taskId
    ${chalk.grey('6ec3ca5b-d04b-4381-b169-61378556d76e')} scheduled for execution with
    prompt for confirmation before removing
      ${this.name} --taskId 6ec3ca5b-d04b-4381-b169-61378556d76e 

  More information:

    SharePoint site design and site script overview
      https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-design-overview
`);
    }
}
module.exports = new SpoSiteDesignTaskRemoveCommand();
//# sourceMappingURL=sitedesign-task-remove.js.map