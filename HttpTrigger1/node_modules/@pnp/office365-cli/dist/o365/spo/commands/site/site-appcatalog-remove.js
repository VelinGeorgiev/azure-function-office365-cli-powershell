"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const config_1 = require("../../../../config");
const commands_1 = require("../../commands");
const request_1 = require("../../../../request");
const SpoCommand_1 = require("../../../base/SpoCommand");
const Utils_1 = require("../../../../Utils");
const Command_1 = require("../../../../Command");
const vorpal = require('../../../../vorpal-init');
class SpoSiteAppCatalogRemoveCommand extends SpoCommand_1.default {
    get name() {
        return commands_1.default.SITE_APPCATALOG_REMOVE;
    }
    get description() {
        return 'Removes site collection app catalog from the specified site';
    }
    getTelemetryProperties(args) {
        const telemetryProps = super.getTelemetryProperties(args);
        telemetryProps.url = (!(!args.options.url)).toString();
        return telemetryProps;
    }
    commandAction(cmd, args, cb) {
        const url = args.options.url;
        let spoAdminUrl = '';
        this
            .getSpoAdminUrl(cmd, this.debug)
            .then((_spoAdminUrl) => {
            spoAdminUrl = _spoAdminUrl;
            return this.getRequestDigest(spoAdminUrl);
        })
            .then((res) => {
            if (this.verbose) {
                cmd.log(`Disabling site collection app catalog...`);
            }
            const requestOptions = {
                url: `${spoAdminUrl}/_vti_bin/client.svc/ProcessQuery`,
                headers: {
                    'X-RequestDigest': res.FormDigestValue
                },
                body: `<Request AddExpandoFieldTypeSuffix="true" SchemaVersion="15.0.0.0" LibraryVersion="16.0.0.0" ApplicationName="${config_1.default.applicationName}" xmlns="http://schemas.microsoft.com/sharepoint/clientquery/2009"><Actions><ObjectPath Id="50" ObjectPathId="49" /><ObjectPath Id="52" ObjectPathId="51" /><ObjectPath Id="54" ObjectPathId="53" /><ObjectPath Id="56" ObjectPathId="55" /><ObjectPath Id="58" ObjectPathId="57" /><Method Name="Remove" Id="59" ObjectPathId="57"><Parameters><Parameter Type="String">${Utils_1.default.escapeXml(url)}</Parameter></Parameters></Method></Actions><ObjectPaths><Constructor Id="49" TypeId="{268004ae-ef6b-4e9b-8425-127220d84719}" /><Method Id="51" ParentId="49" Name="GetSiteByUrl"><Parameters><Parameter Type="String">${Utils_1.default.escapeXml(url)}</Parameter></Parameters></Method><Property Id="53" ParentId="51" Name="RootWeb" /><Property Id="55" ParentId="53" Name="TenantAppCatalog" /><Property Id="57" ParentId="55" Name="SiteCollectionAppCatalogsSites" /></ObjectPaths></Request>`
            };
            return request_1.default.post(requestOptions);
        })
            .then((res) => {
            const json = JSON.parse(res);
            const response = json[0];
            if (response.ErrorInfo) {
                cb(new Command_1.CommandError(response.ErrorInfo.ErrorMessage));
                return;
            }
            else {
                if (this.verbose) {
                    cmd.log('Site collection app catalog disabled');
                }
            }
            cb();
        }, (err) => this.handleRejectedPromise(err, cmd, cb));
    }
    options() {
        const options = [
            {
                option: '-u, --url <url>',
                description: 'URL of the site collection containing the app catalog to disable'
            }
        ];
        const parentOptions = super.options();
        return options.concat(parentOptions);
    }
    validate() {
        return (args) => {
            if (!args.options.url) {
                return 'Required option url missing';
            }
            const isValidSharePointUrl = SpoCommand_1.default.isValidSharePointUrl(args.options.url);
            if (isValidSharePointUrl !== true) {
                return isValidSharePointUrl;
            }
            return true;
        };
    }
    commandHelp(args, log) {
        const chalk = vorpal.chalk;
        log(vorpal.find(this.name).helpInformation());
        log(`  ${chalk.yellow('Important:')} to use this command you have to have permissions to access
    the tenant admin site.
   
  Remarks:

    While the command uses the term 'remove', like its equivalent PowerShell
    cmdlet, it does not remove the special library Apps for SharePoint from
    the site collection. Instead, it disables the site collection app catalog in
    that site. Packages deployed to the app catalog are not available within
    the site collection.

  Examples:
  
    Remove the site collection app catalog from the specified site
      ${commands_1.default.SITE_APPCATALOG_REMOVE} --url https://contoso.sharepoint.com/sites/site

  More information:
    
    Use the site collection app catalog
      https://docs.microsoft.com/en-us/sharepoint/dev/general-development/site-collection-app-catalog
      `);
    }
}
module.exports = new SpoSiteAppCatalogRemoveCommand();
//# sourceMappingURL=site-appcatalog-remove.js.map