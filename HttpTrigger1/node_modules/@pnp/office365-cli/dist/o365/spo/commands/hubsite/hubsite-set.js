"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const config_1 = require("../../../../config");
const request_1 = require("../../../../request");
const commands_1 = require("../../commands");
const Command_1 = require("../../../../Command");
const SpoCommand_1 = require("../../../base/SpoCommand");
const Utils_1 = require("../../../../Utils");
const vorpal = require('../../../../vorpal-init');
class SpoHubSiteSetCommand extends SpoCommand_1.default {
    get name() {
        return commands_1.default.HUBSITE_SET;
    }
    get description() {
        return 'Updates properties of the specified hub site';
    }
    getTelemetryProperties(args) {
        const telemetryProps = super.getTelemetryProperties(args);
        telemetryProps.title = typeof args.options.title === 'string';
        telemetryProps.description = typeof args.options.description === 'string';
        telemetryProps.logoUrl = typeof args.options.logoUrl === 'string';
        return telemetryProps;
    }
    commandAction(cmd, args, cb) {
        let spoAdminUrl = '';
        this
            .getSpoAdminUrl(cmd, this.debug)
            .then((_spoAdminUrl) => {
            spoAdminUrl = _spoAdminUrl;
            return this.getRequestDigest(spoAdminUrl);
        })
            .then((res) => {
            if (this.verbose) {
                cmd.log(`Updating hub site ${args.options.id}...`);
            }
            const title = typeof args.options.title === 'string' ? `<SetProperty Id="13" ObjectPathId="10" Name="Title"><Parameter Type="String">${Utils_1.default.escapeXml(args.options.title)}</Parameter></SetProperty>` : '';
            const description = typeof args.options.description === 'string' ? `<SetProperty Id="15" ObjectPathId="10" Name="Description"><Parameter Type="String">${Utils_1.default.escapeXml(args.options.description)}</Parameter></SetProperty>` : '';
            const logoUrl = typeof args.options.logoUrl === 'string' ? `<SetProperty Id="14" ObjectPathId="10" Name="LogoUrl"><Parameter Type="String">${Utils_1.default.escapeXml(args.options.logoUrl)}</Parameter></SetProperty>` : '';
            const requestOptions = {
                url: `${spoAdminUrl}/_vti_bin/client.svc/ProcessQuery`,
                headers: {
                    'X-RequestDigest': res.FormDigestValue
                },
                body: `<Request AddExpandoFieldTypeSuffix="true" SchemaVersion="15.0.0.0" LibraryVersion="16.0.0.0" ApplicationName="${config_1.default.applicationName}" xmlns="http://schemas.microsoft.com/sharepoint/clientquery/2009"><Actions><ObjectPath Id="9" ObjectPathId="8" /><ObjectPath Id="11" ObjectPathId="10" /><Query Id="12" ObjectPathId="10"><Query SelectAllProperties="true"><Properties /></Query></Query>${title}${logoUrl}${description}<Method Name="Update" Id="16" ObjectPathId="10" /></Actions><ObjectPaths><Constructor Id="8" TypeId="{268004ae-ef6b-4e9b-8425-127220d84719}" /><Method Id="10" ParentId="8" Name="GetHubSitePropertiesById"><Parameters><Parameter Type="Guid">${Utils_1.default.escapeXml(args.options.id)}</Parameter></Parameters></Method></ObjectPaths></Request>`
            };
            return request_1.default.post(requestOptions);
        })
            .then((res) => {
            const json = JSON.parse(res);
            const response = json[0];
            if (response.ErrorInfo) {
                cb(new Command_1.CommandError(response.ErrorInfo.ErrorMessage));
                return;
            }
            else {
                const hubSite = json.pop();
                delete hubSite._ObjectType_;
                hubSite.ID = hubSite.ID.replace('/Guid(', '').replace(')/', '');
                hubSite.SiteId = hubSite.SiteId.replace('/Guid(', '').replace(')/', '');
                cmd.log(hubSite);
                if (this.verbose) {
                    cmd.log(vorpal.chalk.green('DONE'));
                }
            }
            cb();
        }, (err) => this.handleRejectedPromise(err, cmd, cb));
    }
    options() {
        const options = [
            {
                option: '-i, --id <id>',
                description: 'ID of the hub site to update'
            },
            {
                option: '-t, --title [title]',
                description: 'The new title for the hub site'
            },
            {
                option: '-d, --description [description]',
                description: 'The new description for the hub site'
            },
            {
                option: '-l, --logoUrl [logoUrl]',
                description: 'The URL of the new logo for the hub site'
            }
        ];
        const parentOptions = super.options();
        return options.concat(parentOptions);
    }
    validate() {
        return (args) => {
            if (!args.options.id) {
                return 'Required option id missing';
            }
            if (!Utils_1.default.isValidGuid(args.options.id)) {
                return `${args.options.id} is not a valid GUID`;
            }
            if (!args.options.title &&
                !args.options.description &&
                !args.options.logoUrl) {
                return 'Specify title, description or logoUrl to update';
            }
            return true;
        };
    }
    types() {
        // required to support passing empty strings as valid values
        return {
            string: ['t', 'title', 'd', 'description', 'l', 'logoUrl']
        };
    }
    commandHelp(args, log) {
        const chalk = vorpal.chalk;
        log(vorpal.find(commands_1.default.HUBSITE_SET).helpInformation());
        log(`  ${chalk.yellow('Important:')} to use this command you have to have permissions to access
    the tenant admin site.
        
  Remarks:

    ${chalk.yellow('Attention:')} This command is based on a SharePoint API that is currently
    in preview and is subject to change once the API reached general
    availability.

    If the specified ${chalk.grey('id')} doesn't refer to an existing hub site, you will get
    an ${chalk.grey('Unknown Error')} error.

  Examples:
  
    Update hub site's title
      ${this.name} --id 255a50b2-527f-4413-8485-57f4c17a24d1 --title Sales

    Update hub site's title and description
      ${this.name} --id 255a50b2-527f-4413-8485-57f4c17a24d1 --title Sales --description "All things sales"

  More information:

    SharePoint hub sites new in Office 365
      https://techcommunity.microsoft.com/t5/SharePoint-Blog/SharePoint-hub-sites-new-in-Office-365/ba-p/109547
`);
    }
}
module.exports = new SpoHubSiteSetCommand();
//# sourceMappingURL=hubsite-set.js.map