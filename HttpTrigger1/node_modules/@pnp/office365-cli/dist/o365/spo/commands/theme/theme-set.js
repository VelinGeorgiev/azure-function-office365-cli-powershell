"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const config_1 = require("../../../../config");
const commands_1 = require("../../commands");
const request_1 = require("../../../../request");
const SpoCommand_1 = require("../../../base/SpoCommand");
const fs = require("fs");
const path = require("path");
const Utils_1 = require("../../../../Utils");
const vorpal = require('../../../../vorpal-init');
class SpoThemeSetCommand extends SpoCommand_1.default {
    get name() {
        return commands_1.default.THEME_SET;
    }
    get description() {
        return 'Add or update a theme';
    }
    getTelemetryProperties(args) {
        const telemetryProps = super.getTelemetryProperties(args);
        telemetryProps.inverted = (!(!args.options.isInverted)).toString();
        return telemetryProps;
    }
    commandAction(cmd, args, cb) {
        let spoAdminUrl = '';
        this
            .getSpoAdminUrl(cmd, this.debug)
            .then((_spoAdminUrl) => {
            spoAdminUrl = _spoAdminUrl;
            return this.getRequestDigest(spoAdminUrl);
        })
            .then((res) => {
            const fullPath = path.resolve(args.options.filePath);
            if (this.verbose) {
                cmd.log(`Adding theme from ${fullPath} to tenant...`);
            }
            const palette = JSON.parse(fs.readFileSync(fullPath, 'utf8'));
            if (this.debug) {
                cmd.log('');
                cmd.log('Palette');
                cmd.log(JSON.stringify(palette));
            }
            const isInverted = args.options.isInverted ? true : false;
            const requestOptions = {
                url: `${spoAdminUrl}/_vti_bin/client.svc/ProcessQuery`,
                headers: {
                    'X-RequestDigest': res.FormDigestValue
                },
                body: `<Request AddExpandoFieldTypeSuffix="true" SchemaVersion="15.0.0.0" LibraryVersion="16.0.0.0" ApplicationName="${config_1.default.applicationName}" xmlns="http://schemas.microsoft.com/sharepoint/clientquery/2009"><Actions><ObjectPath Id="10" ObjectPathId="9" /><Method Name="UpdateTenantTheme" Id="11" ObjectPathId="9"><Parameters><Parameter Type="String">${Utils_1.default.escapeXml(args.options.name)}</Parameter><Parameter Type="String">{"isInverted":${isInverted},"name":"${Utils_1.default.escapeXml(args.options.name)}","palette":${JSON.stringify(palette)}}</Parameter></Parameters></Method></Actions><ObjectPaths><Constructor Id="9" TypeId="{268004ae-ef6b-4e9b-8425-127220d84719}"/></ObjectPaths></Request>`
            };
            return request_1.default.post(requestOptions);
        })
            .then((res) => {
            const json = JSON.parse(res);
            const contents = json.find(x => { return x['ErrorInfo']; });
            if (contents && contents.ErrorInfo) {
                return Promise.reject(contents.ErrorInfo.ErrorMessage || 'ClientSvc unknown error');
            }
            return Promise.resolve();
        }).then(() => {
            if (this.verbose) {
                cmd.log(vorpal.chalk.green('DONE'));
            }
            cb();
        }, (err) => this.handleRejectedPromise(err, cmd, cb));
    }
    options() {
        const options = [{
                option: '-n, --name <name>',
                description: 'Name of the theme to add or update'
            },
            {
                option: '-p, --filePath <filePath>',
                description: 'Absolute or relative path to the theme json file'
            },
            {
                option: '--isInverted',
                description: 'Set to specify that the theme is inverted'
            }];
        const parentOptions = super.options();
        return options.concat(parentOptions);
    }
    validate() {
        return (args) => {
            if (!args.options.name) {
                return 'Required parameter name missing';
            }
            if (!args.options.filePath) {
                return 'Required parameter filePath missing';
            }
            const fullPath = path.resolve(args.options.filePath);
            if (!fs.existsSync(fullPath)) {
                return `File '${fullPath}' not found`;
            }
            if (fs.lstatSync(fullPath).isDirectory()) {
                return `Path '${fullPath}' points to a directory`;
            }
            return true;
        };
    }
    commandHelp(args, log) {
        const chalk = vorpal.chalk;
        log(vorpal.find(this.name).helpInformation());
        log(`  ${chalk.yellow('Important:')} to use this command you have to have permissions to access
    the tenant admin site.
    
  Examples:
  
    Add or update a theme from a theme JSON file
      ${commands_1.default.THEME_SET} --name Contoso-Blue --filePath /Users/rjesh/themes/contoso-blue.json

    Add or update an inverted theme from a theme JSON file
      ${commands_1.default.THEME_SET} --name Contoso-Blue --filePath /Users/rjesh/themes/contoso-blue.json --isInverted
    
  More information:

    SharePoint site theming
      https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-theming/sharepoint-site-theming-overview

    Theme Generator
      https://developer.microsoft.com/en-us/fabric#/styles/themegenerator
      `);
    }
}
module.exports = new SpoThemeSetCommand();
//# sourceMappingURL=theme-set.js.map