"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const config_1 = require("../../../../config");
const request_1 = require("../../../../request");
const commands_1 = require("../../commands");
const Command_1 = require("../../../../Command");
const SpoCommand_1 = require("../../../base/SpoCommand");
const vorpal = require('../../../../vorpal-init');
class SpoOrgAssetsLibraryRemoveCommand extends SpoCommand_1.default {
    get name() {
        return commands_1.default.ORGASSETSLIBRARY_REMOVE;
    }
    get description() {
        return 'Removes a library that was designated as a central location for organization assets across the tenant.';
    }
    commandAction(cmd, args, cb) {
        let spoAdminUrl = '';
        const removeLibrary = () => {
            this
                .getSpoAdminUrl(cmd, this.debug)
                .then((_spoAdminUrl) => {
                spoAdminUrl = _spoAdminUrl;
                return this.getRequestDigest(spoAdminUrl);
            })
                .then((res) => {
                const requestOptions = {
                    url: `${spoAdminUrl}/_vti_bin/client.svc/ProcessQuery`,
                    headers: {
                        'X-RequestDigest': res.FormDigestValue
                    },
                    body: `<Request AddExpandoFieldTypeSuffix="true" SchemaVersion="15.0.0.0" LibraryVersion="16.0.0.0" ApplicationName="${config_1.default.applicationName}" xmlns="http://schemas.microsoft.com/sharepoint/clientquery/2009"><Actions><ObjectPath Id="9" ObjectPathId="8" /><Method Name="RemoveFromOrgAssets" Id="10" ObjectPathId="8"><Parameters><Parameter Type="String">${args.options.libraryUrl}</Parameter><Parameter Type="Guid">{00000000-0000-0000-0000-000000000000}</Parameter></Parameters></Method></Actions><ObjectPaths><Constructor Id="8" TypeId="{268004ae-ef6b-4e9b-8425-127220d84719}" /></ObjectPaths></Request>`
                };
                return request_1.default.post(requestOptions);
            })
                .then((res) => {
                const json = JSON.parse(res);
                const response = json[0];
                if (response.ErrorInfo) {
                    cb(new Command_1.CommandError(response.ErrorInfo.ErrorMessage));
                    return;
                }
                else {
                    if (args.options.output === 'json') {
                        cmd.log(json[json.length - 1]);
                    }
                    if (this.verbose) {
                        cmd.log(vorpal.chalk.green('DONE'));
                    }
                }
                cb();
            }, (err) => this.handleRejectedPromise(err, cmd, cb));
        };
        if (args.options.confirm) {
            removeLibrary();
        }
        else {
            cmd.prompt({
                type: 'confirm',
                name: 'continue',
                default: false,
                message: `Are you sure you want to remove the library ${args.options.libraryUrl} as a central location for organization assets?`,
            }, (result) => {
                if (!result.continue) {
                    cb();
                }
                else {
                    removeLibrary();
                }
            });
        }
    }
    validate() {
        return (args) => {
            if (!args.options.libraryUrl) {
                return 'Required parameter libraryUrl missing';
            }
            return true;
        };
    }
    options() {
        const options = [
            {
                option: '--libraryUrl <libraryUrl>',
                description: 'The server relative URL of the library to be removed as a central location for organization assets'
            },
            {
                option: '--confirm',
                description: 'Don\'t prompt for confirming removing the organization asset library'
            }
        ];
        const parentOptions = super.options();
        return options.concat(parentOptions);
    }
    commandHelp(args, log) {
        const chalk = vorpal.chalk;
        log(vorpal.find(commands_1.default.ORGASSETSLIBRARY_REMOVE).helpInformation());
        log(`  ${chalk.yellow('Important:')} to use this command you have to have permissions to access
    the tenant admin site.

  Examples:

    Removes organization assets library without confirmation
      ${commands_1.default.ORGASSETSLIBRARY_REMOVE} --libraryUrl "/sites/branding/assets" --confirm
  `);
    }
}
module.exports = new SpoOrgAssetsLibraryRemoveCommand();
//# sourceMappingURL=orgassetslibrary-remove.js.map