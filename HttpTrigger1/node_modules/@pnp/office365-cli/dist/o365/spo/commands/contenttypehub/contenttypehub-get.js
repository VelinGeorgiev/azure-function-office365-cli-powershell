"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const config_1 = require("../../../../config");
const commands_1 = require("../../commands");
const request_1 = require("../../../../request");
const Command_1 = require("../../../../Command");
const SpoCommand_1 = require("../../../base/SpoCommand");
const vorpal = require('../../../../vorpal-init');
class SpoContentTypeHubGetCommand extends SpoCommand_1.default {
    get name() {
        return commands_1.default.CONTENTTYPEHUB_GET;
    }
    get description() {
        return 'Returns the URL of the SharePoint Content Type Hub of the Tenant';
    }
    commandAction(cmd, args, cb) {
        let spoUrl = '';
        this
            .getSpoUrl(cmd, this.debug)
            .then((_spoUrl) => {
            spoUrl = _spoUrl;
            return this.getRequestDigest(spoUrl);
        })
            .then((res) => {
            if (this.verbose) {
                cmd.log(`Retrieving Content Type Hub URL`);
            }
            const requestOptions = {
                url: `${spoUrl}/_vti_bin/client.svc/ProcessQuery`,
                headers: {
                    'X-RequestDigest': res.FormDigestValue
                },
                body: `<Request xmlns="http://schemas.microsoft.com/sharepoint/clientquery/2009" AddExpandoFieldTypeSuffix="true" SchemaVersion="15.0.0.0" LibraryVersion="16.0.0.0" ApplicationName="${config_1.default.applicationName}">
  <Actions>
    <ObjectPath Id="2" ObjectPathId="1" />
    <ObjectIdentityQuery Id="3" ObjectPathId="1" />
    <ObjectPath Id="5" ObjectPathId="4" />
    <ObjectIdentityQuery Id="6" ObjectPathId="4" />
    <Query Id="7" ObjectPathId="4">
      <Query SelectAllProperties="false">
        <Properties>
          <Property Name="ContentTypePublishingHub" ScalarProperty="true" />
        </Properties>
      </Query>
    </Query>
  </Actions>
  <ObjectPaths>
    <StaticMethod Id="1" Name="GetTaxonomySession" TypeId="{981cbc68-9edc-4f8d-872f-71146fcbb84f}" />
    <Method Id="4" ParentId="1" Name="GetDefaultSiteCollectionTermStore" />
  </ObjectPaths>
</Request>`
            };
            return request_1.default.post(requestOptions);
        })
            .then((res) => {
            const json = JSON.parse(res);
            const response = json[0];
            if (response.ErrorInfo) {
                cb(new Command_1.CommandError(response.ErrorInfo.ErrorMessage));
            }
            else {
                const result = {
                    ContentTypePublishingHub: json[json.length - 1]["ContentTypePublishingHub"]
                };
                cmd.log(result);
                cb();
            }
        }, (err) => this.handleRejectedPromise(err, cmd, cb));
    }
    commandHelp(args, log) {
        log(vorpal.find(this.name).helpInformation());
        log(`  Examples:
  
    Retrieve the Content Type Hub URL
      ${commands_1.default.CONTENTTYPEHUB_GET}
    `);
    }
}
module.exports = new SpoContentTypeHubGetCommand();
//# sourceMappingURL=contenttypehub-get.js.map