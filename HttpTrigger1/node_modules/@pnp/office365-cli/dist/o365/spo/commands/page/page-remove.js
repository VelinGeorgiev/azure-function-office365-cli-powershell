"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const request_1 = require("../../../../request");
const commands_1 = require("../../commands");
const SpoCommand_1 = require("../../../base/SpoCommand");
const Utils_1 = require("../../../../Utils");
const vorpal = require('../../../../vorpal-init');
class SpoPageRemoveCommand extends SpoCommand_1.default {
    get name() {
        return `${commands_1.default.PAGE_REMOVE}`;
    }
    get description() {
        return 'Removes a modern page';
    }
    commandAction(cmd, args, cb) {
        let requestDigest = '';
        let pageName = args.options.name;
        const removePage = () => {
            this
                .getRequestDigest(args.options.webUrl)
                .then((res) => {
                requestDigest = res.FormDigestValue;
                if (!pageName.endsWith('.aspx')) {
                    pageName += '.aspx';
                }
                if (this.verbose) {
                    cmd.log(`Removing page ${pageName}...`);
                }
                const requestOptions = {
                    url: `${args.options
                        .webUrl}/_api/web/getfilebyserverrelativeurl('${Utils_1.default.getServerRelativeSiteUrl(args.options.webUrl)}/sitepages/${pageName}')`,
                    headers: {
                        'X-RequestDigest': requestDigest,
                        'X-HTTP-Method': 'DELETE',
                        'content-type': 'application/json;odata=nometadata',
                        accept: 'application/json;odata=nometadata'
                    },
                    json: true
                };
                return request_1.default.post(requestOptions);
            })
                .then(() => {
                if (this.verbose) {
                    cmd.log(vorpal.chalk.green('DONE'));
                }
                cb();
            }, (err) => this.handleRejectedODataJsonPromise(err, cmd, cb));
        };
        if (args.options.confirm) {
            removePage();
        }
        else {
            cmd.prompt({
                type: 'confirm',
                name: 'continue',
                default: false,
                message: `Are you sure you want to remove the page '${args.options.name}'?`
            }, (result) => {
                if (!result.continue) {
                    cb();
                }
                else {
                    removePage();
                }
            });
        }
    }
    options() {
        const options = [
            {
                option: '-n, --name <name>',
                description: 'Name of the page to remove'
            },
            {
                option: '-u, --webUrl <webUrl>',
                description: 'URL of the site from which the page should be removed'
            },
            {
                option: '--confirm',
                description: `Don't prompt before removing the page`
            }
        ];
        const parentOptions = super.options();
        return options.concat(parentOptions);
    }
    validate() {
        return (args) => {
            if (!args.options.name) {
                return 'Required parameter name missing';
            }
            if (!args.options.webUrl) {
                return 'Required parameter webUrl missing';
            }
            const isValidSharePointUrl = SpoCommand_1.default.isValidSharePointUrl(args.options.webUrl);
            if (isValidSharePointUrl !== true) {
                return isValidSharePointUrl;
            }
            return true;
        };
    }
    commandHelp(args, log) {
        const chalk = vorpal.chalk;
        log(vorpal.find(this.name).helpInformation());
        log(`  Remarks:

    If you try to remove a page with that does not exist, you will get
    a ${chalk.grey('The file does not exist')} error.

    If you set the ${chalk.grey('--confirm')}  flag, you will not be prompted for confirmation
    before the page is actually removed.

  Examples:

    Remove a modern page.
      ${this.name} --name page.aspx --webUrl https://contoso.sharepoint.com/sites/a-team

    Remove a modern page without a confirmation prompt.
      ${this.name} --name page.aspx --webUrl https://contoso.sharepoint.com/sites/a-team --confirm
    `);
    }
}
module.exports = new SpoPageRemoveCommand();
//# sourceMappingURL=page-remove.js.map