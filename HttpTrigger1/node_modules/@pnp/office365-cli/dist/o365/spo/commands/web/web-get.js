"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const commands_1 = require("../../commands");
const request_1 = require("../../../../request");
const SpoCommand_1 = require("../../../base/SpoCommand");
const vorpal = require('../../../../vorpal-init');
class SpoWebGetCommand extends SpoCommand_1.default {
    get name() {
        return commands_1.default.WEB_GET;
    }
    get description() {
        return 'Retrieve information about the specified site';
    }
    commandAction(cmd, args, cb) {
        const requestOptions = {
            url: `${args.options.webUrl}/_api/web/`,
            headers: {
                'accept': 'application/json;odata=nometadata'
            },
            json: true
        };
        request_1.default
            .get(requestOptions)
            .then((webProperties) => {
            cmd.log(webProperties);
            cb();
        }, (err) => this.handleRejectedODataJsonPromise(err, cmd, cb));
    }
    options() {
        const options = [
            {
                option: '-u, --webUrl <webUrl>',
                description: 'URL of the site for which to retrieve the information'
            }
        ];
        const parentOptions = super.options();
        return options.concat(parentOptions);
    }
    validate() {
        return (args) => {
            if (!args.options.webUrl) {
                return 'Required parameter webUrl missing';
            }
            const isValidSharePointUrl = SpoCommand_1.default.isValidSharePointUrl(args.options.webUrl);
            if (isValidSharePointUrl !== true) {
                return isValidSharePointUrl;
            }
            return true;
        };
    }
    commandHelp(args, log) {
        const chalk = vorpal.chalk;
        log(vorpal.find(this.name).helpInformation());
        log(`  Examples:
  
    Retrieve information about the site ${chalk.grey('https://contoso.sharepoint.com/subsite')}
      ${commands_1.default.WEB_GET} --webUrl https://contoso.sharepoint.com/subsite
      `);
    }
}
module.exports = new SpoWebGetCommand();
//# sourceMappingURL=web-get.js.map