{"version":3,"file":"StatusLogger.js","sourceRoot":"","sources":["../../Bootstrap/StatusLogger.ts"],"names":[],"mappings":"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","sourcesContent":["import * as os from \"os\";\r\nimport * as path from \"path\";\r\nimport * as fs from \"fs\";\r\n\r\nexport interface StatusContract {\r\n    AgentInitializedSuccessfully: boolean;\r\n    Reason?: string;\r\n    SDKPresent: boolean;\r\n    AppType: string;\r\n    MachineName: string;\r\n    PID: string;\r\n    SdkVersion: string;\r\n    Ikey: string;\r\n}\r\n\r\nconst _APP_TYPE = \"node.js\";\r\nconst _HOME_DIR = os.homedir ? os.homedir() :( process.env[(process.platform == 'win32') ? 'USERPROFILE' : 'HOME']);\r\nconst _FILE_PATH = `${_HOME_DIR}/LogFiles/ApplicationInsights/status/`;\r\nconst _FILE_NAME = `status_${os.hostname()}_${process.pid}.json`;\r\nexport const FULL_PATH = _FILE_PATH + _FILE_NAME;\r\n\r\nfunction readPackageVersion() {\r\n    let packageJsonPath = path.resolve(__dirname, \"../package.json\");\r\n    try {\r\n        let packageJson = JSON.parse(fs.readFileSync(packageJsonPath, \"utf8\"));\r\n        if (packageJson && typeof packageJson.version === \"string\") {\r\n            return packageJson.version;\r\n        }\r\n    } catch (e) {}\r\n    return \"unknown\";\r\n}\r\n\r\n/**\r\n * Zero dependencies: recursive mkdir\r\n */\r\nfunction mkDirByPathSync(targetDir: string, { isRelativeToScript = false } = {}) {\r\n    const sep = path.sep;\r\n    const initDir = path.isAbsolute(targetDir) ? sep : '';\r\n    const baseDir = isRelativeToScript ? __dirname : '.';\r\n\r\n    return targetDir.split(sep).reduce((parentDir, childDir) => {\r\n      const curDir = path.resolve(baseDir, parentDir, childDir);\r\n      try {\r\n        fs.mkdirSync(curDir);\r\n      } catch (err) {\r\n        if (err.code === 'EEXIST') { // curDir already exists!\r\n          return curDir;\r\n        }\r\n\r\n        // To avoid `EISDIR` error on Mac and `EACCES`-->`ENOENT` and `EPERM` on Windows.\r\n        if (err.code === 'ENOENT') { // Throw the original parentDir error on curDir `ENOENT` failure.\r\n          throw new Error(`EACCES: permission denied, mkdir '${parentDir}'`);\r\n        }\r\n\r\n        const caughtErr = ['EACCES', 'EPERM', 'EISDIR'].indexOf(err.code) > -1;\r\n        if (!caughtErr || caughtErr && curDir === path.resolve(targetDir)) {\r\n          throw err; // Throw if it's just the last created dir.\r\n        }\r\n      }\r\n\r\n      return curDir;\r\n    }, initDir);\r\n}\r\n\r\nexport function isNodeVersionCompatible() {\r\n  const majVer = process.versions.node.split(\".\")[0];\r\n  return parseInt(majVer) >= 1;\r\n}\r\n\r\nexport const DEFAULT_STATUS: StatusContract = {\r\n    AgentInitializedSuccessfully: false,\r\n    SDKPresent: false,\r\n    Ikey: null,\r\n    AppType: _APP_TYPE,\r\n    SdkVersion: readPackageVersion(),\r\n    MachineName: os.hostname(),\r\n    PID: String(process.pid)\r\n}\r\n\r\nexport function makeStatusDirs(path = _FILE_PATH) {\r\n    return mkDirByPathSync(path);\r\n}\r\n\r\nexport function writeFile(data: StatusContract, cb?: Function) {\r\n    fs.open(FULL_PATH, \"w\", (err, fid) => {\r\n        if (err) return;\r\n        console.log(FULL_PATH);\r\n        fs.writeFile(FULL_PATH, JSON.stringify(data, null, 2), { encoding: \"utf8\" }, (err) => {\r\n            if (err) {\r\n                console.error(\"Error writing Application Insights status file\", err);\r\n            } else if (cb && typeof cb === \"function\") {\r\n                cb(err);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nexport function addCloseHandler() {\r\n    process.on(\"exit\", () => { try {\r\n        fs.unlinkSync(FULL_PATH);\r\n    } catch (err) { }});\r\n}\r\n"]}